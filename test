import pygame
import random

# Initialize Pygame
pygame.init()

# Set screen dimensions
screen_width = 800
screen_height = 600

# Set colors
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)
green = (0, 255, 0)

# Set snake properties
snake_size = 20
snake_speed = 15

# Create the display surface
game_display = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption('Snake Game')

# Create clock object to control the frame rate
clock = pygame.time.Clock()

# Define the font
font_style = pygame.font.SysFont(None, 50)


def display_message(message, color):
    """
    Display a message on the screen.
    """
    message_text = font_style.render(message, True, color)
    game_display.blit(message_text, [screen_width / 6, screen_height / 3])


def game_loop():
    """
    Main game loop.
    """
    game_over = False
    game_exit = False

    # Initial position for the snake
    x1 = screen_width / 2
    y1 = screen_height / 2

    # Initial movement direction
    x1_change = 0
    y1_change = 0

    # Create the first apple
    apple_x = round(random.randrange(0, screen_width - snake_size) / 20) * 20
    apple_y = round(random.randrange(0, screen_height - snake_size) / 20) * 20

    while not game_exit:
        while game_over:
            game_display.fill(white)
            display_message("Game Over! Press Q-Quit or C-Play Again", red)
            pygame.display.update()

            # Event handling for game over screen
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    game_exit = True
                    game_over = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_exit = True
                        game_over = False
                    if event.key == pygame.K_c:
                        game_loop()

        # Event handling for the game
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_exit = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_size
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_size
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_size
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_size
                    x1_change = 0

        # Update the position of the snake
        x1 += x1_change
        y1 += y1_change

        # Check for collision with the boundaries
        if x1 >= screen_width or x1 < 0 or y1 >= screen_height or y1 < 0:
            game_over = True

        # Fill the display surface with white color
        game_display.fill(white)

        # Draw the apple
        pygame.draw.rect(game_display, red, [apple_x, apple_y, snake_size, snake_size])

        # Draw the snake
        pygame.draw.rect(game_display, black, [x1, y1, snake_size, snake_size])
